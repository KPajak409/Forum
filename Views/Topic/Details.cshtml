@model Forum.Entities.Topic
@using Forum.Entities;
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="text-center">
    <h1 style="text-align:center;">@Html.DisplayFor(model => model.Content) </h1>
    @if (SignInManager.IsSignedIn(User))
    {
        <form asp-action="Create" asp-controller="Response" asp-route-categoryid="@Model.CategoryId" asp-route-topicid="@Model.Id" method="post">
            <input type="hidden" asp-for="Id" />
            <input type="submit" value="Add Response" class="btn btn-secondary" />
        </form>
    }
</div>

<div>
    <h4>Topic</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class="col-sm-10">
            <a asp-controller="User" asp-action="Details" asp-route-id="@Model.AuthorId">@Html.DisplayFor(model => model.Author.UserName)</a>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Date)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Date)
        </dd>
        <dt class="col-sm-2">
            Title
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Content)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Category.Name)
        </dd>
    </dl>
</div>
<div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Responses.First().Author.UserName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Responses.First().Content)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Responses.First().Date)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Responses)
            {
            <tr>
                <td>
                    <a asp-controller="User" asp-action="Details" asp-route-id="@item.AuthorId"> @UserManager.FindByIdAsync(item.AuthorId.ToString()).Result.UserName</a>
                </td>
                <td>
                    <a asp-controller="Response" asp-action="Details" asp-route-categoryid="@Model.CategoryId" asp-route-topicid="@item.TopicId" asp-route-id="@item.Id"> @Html.DisplayFor(modelItem => item.Content)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                @if(UserManager.GetUserId(User) is not null)
                {
                @if (int.Parse(UserManager.GetUserId(User)) == item.AuthorId || User.IsInRole("Admin") || User.IsInRole("Moderator"))
                {
                    <td>
                        <a asp-controller="Response" asp-action="Edit" asp-route-categoryid="@Model.CategoryId" asp-route-topicid="@item.TopicId" asp-route-id="@item.Id">Edit</a> |
                        <a asp-controller="Response" asp-action="Delete" asp-route-categoryid="@Model.CategoryId" asp-route-topicid="@item.TopicId" asp-route-id="@item.Id">Delete</a>
                    </td>
                }
                }
            </tr>
            }
        </tbody>
    </table>
</div>
<div>
    <a asp-controller="Category" asp-action="Details" asp-route-id="@Model.CategoryId">Back to List</a>
</div>
